#install postgresql
sudo apt-get install postgresql postgresql-contrib

#start server
sudo service postgresql start

#basic setup from help.ubuntu for Basic server setup
#change postgre user pwd
sudo -u postgres psql postgres

##Nwo logged into server --> set password for postgres role --> pwd = "postgres"
\password postgres

#switch to postgres user to run commands into server
sudo su â€“ postgres

#login to main postgres db
psql -d postgres

#create user steven
CREATE USER steven PASSWORD 'steven';


#create db 
createdb weather;
\q #to log out

postgres@clouds:~$ psql -d weather
psql (9.3.7)
Type "help" for help.

#run the following commands
CREATE SCHEMA weather;
GRANT ALL ON SCHEMA weather TO steven;
GRANT ALL ON ALL TABLES IN SCHEMA weather TO steven;
SELECT * FROM weather.stations;
CREATE EXTENSION cube;
CREATE EXTENSION earthdistance;


### Don't try steps below until steps above are complete!
#FROM HERE RUN THE load stations script
loadDBwithStations.py script




#log into weather db and create stations table and add extensions for cube and earthdistance
psql -d weather
CREATE EXTENSION cube;
CREATE EXTENSION earthdistance;


CREATE TABLE stations (ICAO_ID CHAR(4), latitude float, longitude float, location point, name VARCHAR(50));

#grant full permissions on schema to steven
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO steven;

#example get all stations within 50 miles of NYC central park
#This SQL statement is inspired by: http://rodush.com/en/2013/09/postgres-and-earthdistance-extension/
SELECT ICAO_ID, name 
FROM stations 
WHERE earth_box(ll_to_earth( 40.7833, -73.9667), 80467) @> ll_to_earth(stations.latitude, stations.longitude);

#EXAMPLE Find 10 closest stations 
SELECT ICAO_ID, name, latitude, longitude, location,
       round((location <@> point( 40.7833,-73.9667))::numeric, 3) as miles
FROM stations 
ORDER BY location <-> point( 40.7833,-73.9667)
limit 10;

##login as database user and then cd to script directory
user@ubuntu-dev:~/Desktop/GitHub/WeatherTalk/WeatherScripts$ sudo su - postgres
postgres@ubuntu-dev:~$ cd /home/steven/Desktop/T/WeatherTalk/StationFinder
postgres@clouds:/home/steven/Desktop/T/WeatherTalk/StationFinder$ python loadDBwithStations.py


#test to verify data loaded into table, will return all stations/rows
import psycopg2
import sys
connection = None
connection = psycopg2.connect("dbname=weather user=postgres password=postgres") 
cursor = connection.cursor()
cursor.execute("SELECT * FROM stations;")
cursor.fetchall()
cursor.close()


###vvvvvvvvvvvvvvvv NOT USED NOW  vvvvvv
#     how to load in earthbox function (THESE ERROR OUT NOW)
SELECT ICAO_ID, name FROM stations WHERE earth_box( {current_user_lat}, {current_user_lng}, {radius_in_metres}) @> ll_to_earth(events.lat, events.lng);
SELECT ICAO_ID, name FROM stations WHERE earth_box( 40.0, -70.0, 100000) @> ll_to_earth(stations.latitude, stations.longitude);


##SETUP PYTHON (NOT NECESSARY AT MOMENT)
sudo apt-get install python-psycopg2
sudo -u postgres createuser pythonuser

#create table with python (CREATED ABOVE IN MAIN
cursor.execute("CREATE TABLE stations (ICAO_ID CHAR(4), latitude float, longitude float, name VARCHAR(50));")


